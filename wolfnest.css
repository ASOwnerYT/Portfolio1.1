/*timeline layout & styling*/
.item {
  display: grid;
  grid-template-columns: 1fr min-content 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: "content-left image content-right";
  align-items: center;
  position: relative;
  z-index: 2;
}
.item + .item {
  margin-top: 4rem;
}
.wrap {
  grid-area: content-left;
  padding: 1rem;
  max-width: 25rem;
}
.item:nth-child(even) .wrap {
  grid-area: content-right;
}
.img {
  width: 15rem;
  height: 15rem;
  background: #888;
  border: 0.5rem solid #888;
  border-radius: 50%;
  grid-area: image;
  overflow: hidden;
}
.img > img {
  height: 100%;
  object-fit: cover;
  object-position: center center;
}

/*Wolfnest timeline*/
.timeline {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}
.timeline::before {
  position: absolute;
  content: "";
  display: block;
  width: 0.4rem;
  height: 100%;
  background: #888;
  z-index: 1;
}

.title {
  position: relative;
}

/*.bounce.animate-on-scroll span {
  position: relative;
  display: inline-block;
  animation: bounce 1s; /* Animation duration */
 /* animation-delay: calc(
    0.1s * var(--i)
  ); /* Animation delay: 0.1s multiplied by --i variable defined in the spans }*/


/*@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30%);
  }
  60% {
    transform: translateY(-15%);
  }
}

.slide-in {
  opacity: 1;
  transform: translateY(0);
}*/

/*@keyframes slide-in {
  0% {
    transform: translateY(100%);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}/*

/*.slide-in.animate-on-scroll span {
  position: relative;
  display: inline-block;
  animation: slide-in 1s;
  animation-delay: calc(0.1s * var(--i));
}*/

/*span {
	opacity: 0;
    filter: blur(4px);
	transform: scale (0.94);
	animation: scale 3s forwards cubic-bezier(0.5, 1, 0.89, 1);
}
@keyframes scale {
  100% {
    transform: scale(1);
  }
}
span:nth-child(1) {
	animation: fade-in 0.8s 0.1s forwards cubic-bezier(0.11, 0, 0.5, 0);
	@keyframes fade-in {
		100% {
		  opacity: 1;
		  filter: blur(0);
		}
  }*/
  .spin.animate-on-scroll span {
    position: relative;
    display: inline-block;
    animation: spin 2s; /* Animation duration */
    animation-delay: calc(
      0.1s * var(--i)
    ); /* Animation delay: 0.1s multiplied by --i variable defined in the spans */
  }
  @keyframes spin {
    0%, 75% {
      transform: rotateY(360deg) 
    }
  }
 /* .focus.animate-on-scroll span {
    position: relative;
    display: inline-block;
    animation: focus 2s linear; /* Animation duration */
 /*   animation-delay: calc(
      0.1s * var(--i)
    ); /* Animation delay: 0.1s multiplied by --i variable defined in the spans */
/*  }
  @keyframes focus {
    0%,
    {
      filter: blur(0);
    }
    40% {
      filter: blur(20px);
    }
    80% {
      filter: blur(0);
    }
    100% {
      filter: blur (0)
    }
  }
  /*.squeeze.animate-on-scroll span {
    position: relative;
    display: inline-block;
    animation: squeeze 1s ease-in-out; /* Animation duration */
   /* animation-delay: calc(
      0.1s * var(--i)
    ); /* Animation delay: 0.1s multiplied by --i variable defined in the spans */
  /*}
  @keyframes squeeze {
    0%,
    20%,
    40%,
    60%,
    80%,
    0% {
      transform: scalex (0)
    }
    20% {
      transform: scaleX(-10%);
    }
    40% {
      transform: scaleX(-20%);
    }
    60% {
      transform: scaleX(-10%)
    }
    80% {
      transform: scaleX(0%);
    }
    100% {
      transform: scaleX(1)
    }
  }
  .zoom.animate-on-scroll span {
    position: relative;
    display: inline-block;
    animation: zoom .5s; /* Animation duration */
    /*animation-delay: calc(
      0.1s * var(--i)
    ); /* Animation delay: 0.1s multiplied by --i variable defined in the spans */
  /*}
  @keyframes zoom {
    0% {
      opacity: 0;
      transform: translateX(-100%);
    }
   
    100% {
      transform: translateX(0);
    }
  }
  .random.animate-on-scroll span {
    position: relative;
    display: inline-block;
    animation: random 2s ease-in-out; /* Animation duration */
    /*animation-delay: calc(
      0.1s * var(--i)
    ); /* Animation delay: 0.1s multiplied by --i variable defined in the spans */
  /*}
  @keyframes random {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform:translateY (0) rotate(0deg);
    }
    40% {
      transform: translateY(-200px) rotate(360deg);
    }
    60% {
      transform: translateY (200px) rotate(-360deg);
    }
  }*/